name: CI

on:
  push:
    branches:
      - '**'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      herbie-db:
        image: postgres:12.1
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: herbie_db
        ports:
        - 5432:5432
      herbie-google-pub-sub:
        image: 'knarz/pubsub-emulator'
        ports:
          - '8085:8085'
    steps:

    - name: Checkout working branch
      uses: actions/checkout@v1

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install PostgreSQL 11 client
      run: |
        sudo apt-get -yqq install libpq-dev

    - name: Cache Poetry
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies, config poetry virtualenv
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        python manage.py migrate
        pytest --verbose
      env:
        RUN_DEV: 0
        CLUSTER_ENV: test
        POSTGRES_DB: herbie_db
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_DB_PORT: 5432
        POSTGRES_DB_HOST: localhost
        SECRET_KEY: thisisasecret
        PUBSUB_EMULATOR_HOST: localhost:8085
        GCLOUD_PUBSUB_PROJECT_ID: 'herbie-app'
